version: "4"

services:
  clickhouse-server:
    image: clickhouse:latest
    container_name: clickhouse-server
    hostname: clickhouse-server
    restart: unless-stopped
    environment:
      CLICKHOUSE_PASSWORD: 1234qwe
      CLICKHOUSE_USER: default
    cap_add:
      - SYS_NICE 
      - IPC_LOCK  
      - NET_ADMIN
      - SYS_PTRACE
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    ports: 
      - "8123:8123"
    volumes:
      - clickhouse-data:/var/lib/clickhouse/
    networks:
      - spark-net

  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    restart: always
    ports:
      - 9870:9870
      - 9010:9000
    volumes:
      - hadoop-namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    env_file:
      - ./hadoop.env
    networks:
      - spark-net

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    restart: always
    volumes:
      - hadoop-datanode:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
      CORE_CONF_fs_defaultFS: hdfs://namenode:9000
    ports:
      - "9864:9864"
    env_file:
      - ./hadoop.env
    networks:
      - spark-net

  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864"
    env_file:
      - ./hadoop.env
    networks:
      - spark-net

  nodemanager1:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    env_file:
      - ./hadoop.env
    networks:
      - spark-net

  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    container_name: historyserver
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    volumes:
      - hadoop-historyserver:/hadoop/yarn/timeline
    env_file:
      - ./hadoop.env
    networks:
      - spark-net
    
  spark-master:
    image: apache/spark:3.5.1
    container_name: spark-master
    hostname: spark-master

    depends_on:
      - namenode
      - datanode
    
    environment:
      - SPARK_NO_DAEMONIZE=true
      - SPARK_MASTER_HOST=spark-master

      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    command: >
      bash -c "
        /opt/spark/sbin/start-master.sh &&
        tail -f /opt/spark/logs/spark--org.apache.spark.deploy.master.Master-*.out
      "
    ports:
      - "8080:8080"
      - "7077:7077"
    networks:
      - spark-net
  
  spark-worker:
    image: apache/spark:3.5.1

    depends_on:
      - spark-master

    environment:
      - SPARK_NO_DAEMONIZE=true
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=2G
      - SPARK_MASTER_URL=spark://spark-master:7077

      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    command: >
      bash -c "
        /opt/spark/sbin/start-worker.sh spark://spark-master:7077 &&
        tail -f /opt/spark/logs/spark--org.apache.spark.deploy.worker.Worker-*.out
      "
    networks:
      - spark-net

  hive-server:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-server

    depends_on:
      - namenode
      - datanode
  
    env_file:
      - ./hadoop-hive.env
    environment:
      HIVE_CORE_CONF_javax_jdo_option_ConnectionURL: "jdbc:postgresql://hive-metastore/metastore"
      SERVICE_PRECONDITION: "hive-metastore:9083"

    ports:
      - "10000:10000"
    #command: ["hiveserver2"]

    networks:
      - spark-net

  hive-metastore:
    image: bde2020/hive:2.3.2-postgresql-metastore
    container_name: hive-metastore
    env_file:
      - ./hadoop-hive.env
    command: /opt/hive/bin/hive --service metastore
    environment:
      SERVICE_PRECONDITION: "namenode:9870 datanode:9864 hive-metastore-postgresql:5432"
    ports:
      - "9083:9083"
    
    networks:
      - spark-net

  hive-metastore-postgresql:
    image: bde2020/hive-metastore-postgresql:2.3.0
    container_name: hive-metastore-postgresql
    ports:
      - "5432:5432"
    networks:
      - spark-net
  presto-coordinator:
    image: shawnzhu/prestodb:0.181
    container_name: presto-coordinator
    ports:
      - "8089:8089"
    networks:
      - spark-net

  jupyter:
    build:
      context: ./jupyter
      dockerfile: Dockerfile
    container_name: jupyter
    hostname: jupyter
    depends_on:
      - spark-master
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - PYSPARK_PYTHON=python3
      - PYSPARK_DRIVER_PYTHON=jupyter
      - PYSPARK_DRIVER_PYTHON_OPTS="notebook --no-browser --ip=0.0.0.0 --allow-root --NotebookApp.token=''"
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/home/jovyan/work
    networks:
      - spark-net

volumes:
  hadoop-namenode:
  hadoop-datanode:
  hadoop-historyserver:
  clickhouse-data:

networks:
  spark-net:
    driver: bridge